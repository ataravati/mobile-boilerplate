// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`app can render snapshot 1`] = `
<View
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    Object {
      "backgroundColor": "transparent",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "zIndex": 0,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            Object {
              "flex": 1,
              "flexDirection": "column-reverse",
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#000",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessibilityElementsHidden={false}
            pointerEvents="auto"
            style={
              Object {
                "backgroundColor": "#E9E9EF",
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "paddingTop": 64,
                "position": "absolute",
                "right": 0,
                "shadowColor": "black",
                "shadowOffset": Object {
                  "height": 0,
                  "width": 0,
                },
                "shadowOpacity": 0.2,
                "shadowRadius": 5,
                "top": 0,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#fff",
                    "flex": 1,
                    "height": 1334,
                  },
                  Object {
                    "direction": "rtl",
                  },
                ]
              }
            >
              <View
                onLayout={[Function]}
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#F8F8F8",
                        "borderBottomColor": "#a7a6ab",
                        "borderBottomWidth": 0.5,
                        "elevation": 3,
                        "flexDirection": "row",
                        "height": 64,
                        "justifyContent": "center",
                        "left": 0,
                        "paddingLeft": 6,
                        "paddingRight": 10,
                        "paddingTop": 18,
                        "right": 0,
                        "shadowColor": undefined,
                        "shadowOffset": undefined,
                        "shadowOpacity": undefined,
                        "shadowRadius": undefined,
                        "top": 0,
                      },
                      Object {
                        "backgroundColor": "white",
                      },
                    ]
                  }
                />
              </View>
              <RCTScrollView
                automaticallyAdjustContentInsets={false}
                contentContainerStyle={
                  Array [
                    Object {
                      "padding": undefined,
                    },
                    undefined,
                  ]
                }
                contentInset={
                  Object {
                    "bottom": 0,
                  }
                }
                enableAutomaticScroll={true}
                enableResetScrollToCoords={true}
                extraHeight={75}
                extraScrollHeight={0}
                getScrollResponder={[Function]}
                handleOnScroll={[Function]}
                keyboardDismissMode="interactive"
                keyboardOpeningTime={250}
                keyboardShouldPersistTaps="handled"
                keyboardSpace={0}
                onScroll={[Function]}
                resetKeyboardSpace={[Function]}
                resetScrollToCoords={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                scrollEventThrottle={1}
                scrollForExtraHeightOnAndroid={[Function]}
                scrollToEnd={[Function]}
                scrollToFocusedInput={[Function]}
                scrollToPosition={[Function]}
                showsVerticalScrollIndicator={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "flex": 1,
                    },
                    Object {
                      "flex": 1,
                    },
                  ]
                }
                viewIsInsideTabBar={false}
              >
                <View>
                  <ActivityIndicator
                    animating={true}
                    color="#45D56E"
                    hidesWhenStopped={true}
                    size="large"
                    style={
                      Object {
                        "height": 80,
                      }
                    }
                  />
                </View>
              </RCTScrollView>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#F8F8F8",
                      "borderColor": "#cbcbcb",
                      "borderTopWidth": 0.5,
                      "elevation": 3,
                      "flexDirection": "row",
                      "height": 55,
                      "justifyContent": "center",
                      "left": 0,
                      "paddingBottom": 0,
                      "right": 0,
                    },
                    Object {
                      "flexDirection": "column",
                      "height": 150,
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#FFF",
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <View
              onLayout={[Function]}
              pointerEvents="box-none"
              style={
                Object {
                  "backgroundColor": "#FFF",
                  "borderBottomColor": "#A7A7AA",
                  "borderBottomWidth": 0.5,
                  "height": 64,
                  "paddingBottom": 0,
                  "paddingLeft": 0,
                  "paddingRight": 0,
                  "paddingTop": 20,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "bottom": 0,
                      "flexDirection": "row",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    pointerEvents="box-none"
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "left": 70,
                        "opacity": 1,
                        "position": "absolute",
                        "right": 70,
                        "top": 0,
                      }
                    }
                  >
                    <Text
                      accessibilityTraits="header"
                      accessible={false}
                      allowFontScaling={true}
                      numberOfLines={1}
                      onLayout={[Function]}
                      style={
                        Object {
                          "color": "rgba(0, 0, 0, .9)",
                          "fontSize": 17,
                          "fontWeight": "600",
                          "marginHorizontal": 16,
                          "textAlign": "center",
                        }
                      }
                    >
                      پادکست‌های من
                    </Text>
                  </View>
                  <View
                    pointerEvents="box-none"
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "flexDirection": "row",
                        "left": 0,
                        "opacity": 1,
                        "padding": 16,
                        "position": "absolute",
                        "top": 0,
                      }
                    }
                  >
                    <View
                      style={Object {}}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <Text
                          allowFontScaling={false}
                          style={
                            Array [
                              Object {
                                "color": "black",
                                "fontSize": 12,
                              },
                              Array [
                                Object {
                                  "color": "#000",
                                  "fontSize": 30,
                                },
                                Object {
                                  "color": "#000",
                                  "fontSize": 30,
                                },
                              ],
                              Object {
                                "fontFamily": "Ionicons",
                                "fontStyle": "normal",
                                "fontWeight": "normal",
                              },
                            ]
                          }
                        >
                          
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    accessible={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    pointerEvents="none"
    style={
      Object {
        "backgroundColor": "#000",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 1000,
      }
    }
  />
  <View
    accessibilityViewIsModal={false}
    style={
      Object {
        "backgroundColor": "white",
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": null,
        "top": 0,
        "transform": Array [
          Object {
            "translateX": -320,
          },
        ],
        "width": 320,
        "zIndex": 1001,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <RCTScrollView
        alwaysBounceVertical={false}
      >
        <View>
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 20,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "paddingVertical": 4,
                  },
                  undefined,
                ]
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  onLayout={[Function]}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "backgroundColor": "rgba(0, 0, 0, .04)",
                      "paddingBottom": 0,
                      "paddingLeft": 0,
                      "paddingRight": 0,
                      "paddingTop": 0,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "fontWeight": "bold",
                            "margin": 16,
                          },
                          Object {
                            "color": "#e91e63",
                          },
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      پادکست‌های من
                    </Text>
                  </View>
                </View>
              </View>
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  onLayout={[Function]}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "paddingBottom": 0,
                      "paddingLeft": 0,
                      "paddingRight": 0,
                      "paddingTop": 0,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "fontWeight": "bold",
                            "margin": 16,
                          },
                          Object {
                            "color": "rgba(0, 0, 0, .87)",
                          },
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      در حال پخش
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;
